2015年1月5日

在实际使用过程中发现，远程服务需要定义接口IService和数据结构Bean。
接口依赖于数据结构Bean，要保证bean没有遗漏，
就必须把api和实现隔离在两个项目中，同时是单项依赖。

我设想有个平台，在平台上使用IDL描述性语法，定义好接口和bean，
然后由平台生成api.jar文件。

1)对于使用者，导入通用的客户端client.jar和api.jar就可以使用了，
使用者可以这样IService service = Client.getService(IService.class, "10.12.13.14:1122")
指定服务器地址和端口就可以直接连接上。摆脱了对配置中心获得ip的依赖。

想实现的最终使用效果是，把client.jar和api.jar丢进jvm就可以跑起来。
最好是可以直接new一个对象就跑起来，不需要过度依赖spring的配置，当然spring想配置也行。

2)对于服务提供者，导入api.jar并在部署框架上实现了，配置实现impl，
并通过容器部署到服务器上。通用框架会将服务上线通知到可能存在的配置中心。

使用IDL的好处是，当这个平台存在时，所有协议和实现和部署都可以管理起来，
使用者可以直接在平台上调试服务实现是否正常。

IDL的生成模式也支持其它编程语言。