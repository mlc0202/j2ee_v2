<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <context:component-scan base-package="*" />

    <!-- 开启HessianService注解 -->
	<bean id="scanner" class="soa.annotation.HessianServiceScanner">
	   <property name="basePackage" value="*" />
	</bean>

    <!-- *************下面代码是xml配置的方式*************** -->
    
    <!-- 在SpringMVC的配置文件中，当一个bean的name是以“/”开始的时候Spring会自动对它进行BeanNameUrlHandlerMapping -->
<!--     <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/> -->

	<!-- 服务实现类，这个类没有入侵任何hessian的东西 -->
<!-- 	<bean id="userService" class="spring_remote.service.UserServiceImpl" /> -->

    <!-- bean的name配置了暴露出来的url -->
<!-- 	<bean name="/userService" -->
<!-- 		class="org.springframework.remoting.caucho.HessianServiceExporter"> -->
<!-- 		<property name="service" ref="userService" /> -->
<!-- 		<property name="serviceInterface" value="spring_remote.api.service.IUserService" /> -->
<!-- 	</bean> -->

</beans>