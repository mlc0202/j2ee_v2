[装饰者模式]

装饰者和被装饰者有相同的类型，装饰者“包含”一个被装饰者对象，
并对被装饰者某些方法的调用做些之前或之后的处理。(通过这种组合方式改变行为)

每个对象都可以单独来使用，也可以被装饰后来使用，对于使用者而言，这个是[透明]的。

装饰者并不修改被装饰者的代码，而是在它之上包了一层，以实现对调用的处理。
这符合OCP原则， 免于改变，能够扩展。

实际应用：
Java的I/O库，像InputStream，FilterInputStream就是一个抽象的装饰者，
BufferedInputStream,DataInputStream等就是它的子类，也就是装饰者，
这些装饰者的实例化需要包含一个InputStream对象。

